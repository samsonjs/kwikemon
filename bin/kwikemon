#!/usr/bin/env node

var kwikemon = require('../kwikemon.js');

function usage() {
  console.log("usage: kwikemon [options]");
  console.log("       kwikemon <name> [text]");
  console.log();
  console.log("options:");
  console.log("    -c, --clear          remove all monitors");
  console.log("    -f, --fetch <name>   show the text of the named monitor");
  console.log("    -n, --count          count monitors");
  console.log("    -h, --help           show what you're reading now");
  console.log("    -l, --list           show all monitors");
  console.log("    -r, --remove <name>  remove the named monitor");
  console.log("    -s, --sweep          clean up expired & deleted monitors");
  console.log("    -t, --ttl <name>     show the TTL of the named monitor");
}

var opt = process.argv[2]
  , name = process.argv[2]
  , text = process.argv[3]
  ;
if (opt && opt[0] == '-') {
  switch (opt) {
  case '-c':
  case '--clear':
    kwikemon.removeAll(function(err) {
      process.exit(0);
    });
    break;

  case '-f':
  case '--fetch':
    var name = process.argv[3];
    kwikemon.fetch(name, function(err, mon) {
      if (mon) {
        console.log(mon.text);
        process.exit(0);
      }
      else {
        console.log('error: no monitor named', name);
        process.exit(1);
      }
    });
    break;

  case '-l':
  case '--list':
    kwikemon.fetchAll(function(err, monitors) {
      Object.keys(monitors).forEach(function(name) {
        console.log(name + ':', monitors[name].text);
      });
      process.exit(0);
    });
    break;

  case '-n':
  case '--count':
    kwikemon.count(function(err, n) {
      console.log(n);
      process.exit(0);
    });
    break;

  case '-r':
  case '--remove':
    name = process.argv[3];
    if (name) {
      kwikemon.remove(name, function(err) {
        process.exit(0);
      })
    }
    else {
      console.log("error: --remove requires a name");
      process.exit(1);
    }
    break;

  case '-s':
  case '--sweep':
    kwikemon.sweep(function(err) {
      process.exit(0);
    });
    break;

  case '-t':
  case '--ttl':
    var name = process.argv[3];
    kwikemon.fetchTTL(name, function(err, ttl) {
      if (typeof ttl == 'number') {
        console.log(ttl);
        process.exit(0);
      }
      else {
        console.log('error: no monitor named', name);
        process.exit(1);
      }
    });
    break;

  default:
    usage();
    process.exit(name == '-h' || name == '--help' ? 0 : 1);
  }
}
else if (name && text) {
  kwikemon.set(name, text, function() {
    process.exit(0);
  });
}
else if (name) {
  process.stdin.pipe(kwikemon.createWriter(name));
  process.stdin.on('end', function() {
    process.exit(0);
  });
}
else {
  usage();
  process.exit(1);
}
